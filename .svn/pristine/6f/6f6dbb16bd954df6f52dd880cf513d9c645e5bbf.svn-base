package com.sitemap.railwaylocation.activity;

import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.KeyEvent;
import android.view.WindowManager;
import android.widget.ImageView;

import com.sitemap.railwaylocation.R;
import com.sitemap.railwaylocation.application.MyApplication;
import com.sitemap.railwaylocation.config.RequestCode;
import com.sitemap.railwaylocation.config.WebUrlConfig;
import com.sitemap.railwaylocation.http.HttpUtil;
import com.sitemap.railwaylocation.model.UserModel;
import com.sitemap.railwaylocation.util.LocationService;
import com.sitemap.railwaylocation.util.ParserUtil;
import com.sitemap.railwaylocation.util.PreferencesUtil;
import com.sitemap.railwaylocation.util.ToastUtil;

import org.xutils.http.RequestParams;
import org.xutils.view.annotation.ContentView;
import org.xutils.view.annotation.ViewInject;

@ContentView(R.layout.activity_splash)
public class SplashActivity extends BaseActivity implements Runnable{
    private SplashActivity mContext;//本类
    private HttpUtil http;//网络请求
    @ViewInject(R.id.img)
    private ImageView img;//图片
    private Bitmap bt = null;//加载图片类

    private Handler handler = new Handler(){
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what){
                case HttpUtil.SUCCESS:
                    if (msg.arg1 == RequestCode.LOGIN){
                        MyApplication.userModel = (UserModel) ParserUtil.jsonToObject(msg.obj.toString(), UserModel.class);
                        if ("1".equals(MyApplication.userModel.getResult())){
                            ToastUtil.showBottomLong(mContext,"登录成功");
                            int time = Integer.parseInt(MyApplication.userModel.getGpsRate())*1000;
                            MyApplication.gpsTime = time;
                            MyApplication.locationService = new LocationService(getApplicationContext());

                            Intent intent = new Intent(mContext,MainActivity.class);
                            startActivity(intent);
                            mContext.finish();
                        }else{
                            ToastUtil.showBottomLong(mContext,MyApplication.userModel.getErrorMsg());
                        }
                    }
                    break;
                case HttpUtil.EMPTY:
                    break;
                case HttpUtil.FAILURE:
                    ToastUtil.showBottomLong(mContext, RequestCode.ERRORINFO);
                    break;
                case 1:
                    if (PreferencesUtil.getFristLogin(mContext,"first")){//第一次登录
                        Intent intent = new Intent(mContext,LoginActivity.class);
                        startActivity(intent);
                        mContext.finish();
                    }else{
                        Log.e("jack","mac:"+MyApplication.getDeviceID(mContext));
                        String phone = PreferencesUtil.getStringData(mContext,"userName");
                        String psw = PreferencesUtil.getStringData(mContext,"psw");
                        getLogin(phone,psw,MyApplication.getDeviceID(mContext));
                    }
                    break;
                default:
                    break;
            }
        }
    };

    @Override
    protected void initData() {
        mContext = this;
        getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);//影藏系统状态栏
        if (http == null){
            http = new HttpUtil(handler);
        }
        if (bt == null)
            bt = BitmapFactory.decodeResource(getResources(),R.drawable.qdy);
        img.setImageBitmap(bt);
        handler.postDelayed(this, 3000);
    }

    /**
     * 获取登录信息
     *
     */
    private void getLogin(String userName,String psw,String mac) {
        if (MyApplication.getNetObject().isNetConnected()) {
            RequestParams params = http.getParams(WebUrlConfig.login());
            params.addBodyParameter("userName",userName);
            params.addBodyParameter("userPwd",psw);
            params.addBodyParameter("mac",mac);
            http.sendPost(RequestCode.LOGIN,params);
        } else {
            ToastUtil.showBottomShort(mContext, RequestCode.NOLOGIN);
        }
    }

    /**
     * 改写物理按键——返回的逻辑
     */
    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK) {
            handler.removeCallbacks(this);
            mContext.finish();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        handler.removeCallbacks(this);
        if (bt != null) {
            //释放图片内存
            bt.recycle();
            bt = null;
        }
        //强制回收
        System.gc();
    }

    @Override
    public void run() {
        handler.sendEmptyMessage(1);
    }

}
